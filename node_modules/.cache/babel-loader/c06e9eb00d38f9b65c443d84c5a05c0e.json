{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J-PC\\\\Desktop\\\\resort\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); // <RoomContext.Provider value={'hello'}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state;\n      let tempRooms = [...rooms];\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    // this.getData\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["C:/Users/J-PC/Desktop/resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","filter","componentDidMount","formatData","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport items from './data';\r\n\r\nconst RoomContext = React.createContext();\r\n\r\n// <RoomContext.Provider value={'hello'}\r\n\r\nclass RoomProvider extends Component {\r\n\tstate = {\r\n\t\trooms: [],\r\n\t\tsortedRooms: [],\r\n\t\tfeaturedRooms: [],\r\n\t\tloading: true,\r\n\t\ttype: \"all\",\r\n\t\tcapacity: 1,\r\n\t\tprice: 0,\r\n\t\tminPrice: 0,\r\n\t\tmaxPrice: 0,\r\n\t\tminSize: 0,\r\n\t\tmaxSize: 0,\r\n\t\tbreakfast: false, \r\n\t\tpets: false\r\n\t};\r\n\t// getData\r\n\r\n\tcomponentDidMount() {\r\n\t\t// this.getData\r\n\t\tlet rooms = this.formatData(items);\r\n\t\tlet featuredRooms = rooms.filter((room) => room.featured === true);\r\n\t\tlet maxPrice = Math.max(...rooms.map(item => item.price));\r\n\t\tlet maxSize = Math.max(...rooms.map(item => item.size));\r\n\t\tthis.setState({\r\n\t\t\trooms,\r\n\t\t\tfeaturedRooms,\r\n\t\t\tsortedRooms: rooms,\r\n\t\t\tloading: false,\r\n\t\t\tprice: maxPrice,\r\n\t\t\tmaxPrice,\r\n\t\t\tmaxSize\r\n\t\t});\r\n\t}\r\n\r\n\tformatData(items) {\r\n\t\tlet tempItems = items.map((item) => {\r\n\t\t\tlet id = item.sys.id;\r\n\t\t\tlet images = item.fields.images.map((image) => image.fields.file.url);\r\n\r\n\t\t\tlet room = { ...item.fields, images, id };\r\n\t\t\treturn room;\r\n\t\t});\r\n\t\treturn tempItems;\r\n\t}\r\n\r\n\tgetRoom = (slug) => {\r\n\t\tlet tempRooms = [ ...this.state.rooms ];\r\n\t\tconst room = tempRooms.find((room) => room.slug === slug);\r\n\t\treturn room;\r\n\t};\r\nhandleChange = event => {\r\n\tconst target = event.target\r\n\tconst value = event.type === 'checkbox' ? target.checked:target.value\r\n\tconst name = event.target.name\r\n\tthis.setState({\r\n\t\t[name]:value\r\n\t},this.filterRooms)\r\n\r\n\t\r\n}\r\nfilterRooms = ()=>{\r\n\tlet{\r\n\t\trooms,type,capacity,price,minSize,maxSize,breakfast,pets\r\n\t} = this.state\r\n\r\n\tlet tempRooms = [...rooms];\r\n\tif(type !== 'all'){\r\n\t\ttempRooms = tempRooms.filter(room => room.type === type)\r\n\t}\r\n\tthis.setState({\r\n\t\tsortedRooms:tempRooms\r\n\t})\r\n}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<RoomContext.Provider value={{ ...this.state, getRoom: this.getRoom, handleChange: this.handleChange }}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</RoomContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport function withRoomConsumer(Component){\r\n\treturn function ConsumerWrapper(props){\r\n\t\treturn <RoomConsumer>\r\n\t\t\t{value => <Component {...props} context={value} />}\r\n\t\t\t\t</RoomConsumer>\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };\r\n"]},"metadata":{},"sourceType":"module"}